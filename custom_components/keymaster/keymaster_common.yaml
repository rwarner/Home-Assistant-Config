## WARNING ##
# This file is auotmaticly generated, any changes
# will be overwritten.

##################################################
################  COMMON ENTITIES  ###############
##################################################

###############  input_boolean:  #################
input_boolean:
  LOCKNAME_lock_notifications:
    name: CASE_LOCK_NAME Lock Notifications
  LOCKNAME_dooraccess_notifications:
    name: CASE_LOCK_NAME Door Notifications
  LOCKNAME_garageacess_notifications:
    name: CASE_LOCK_NAME Garage Notifications
  LOCKNAME_reset_lock:
    name: CASE_LOCK_NAME reset lock

###################  sensor:  ####################
sensor:
  - platform: time_date
    display_options:
      - "time"
      - "date"

###################  script    :  ####################
script:
  LOCKNAME_reset_lock:
    sequence:
      - service: script.LOCKNAME_manual_notify
        data_template:
          title: "reset"
          message: "LOCKNAME"

  LOCKNAME_conditional_notify:
    sequence:
      - condition: template
        value_template: >-
          {% set inputbool = boolean %}
          {% if states(inputbool) == 'on'%}
            true
          {% else %}
            false
          {% endif %}
      - service: script.LOCKNAME_manual_notify
        data_template:
          title: "{{title}}"
          message: "{{message}}"

  LOCKNAME_refreshnodeinfo:
    description:  'Send MQTT RefreshNodeInfo command'
    sequence:
      - service: system_log.write
        data_template:
          message: "LOCKNAME_TEMPLATENUM started noderefreshinfo: {{ now() }}"
          level: debug  
      - service: mqtt.publish
        data:
          topic: 'OpenZWave/1/command/refreshnodeinfo/'
          payload: >-
            {% set node_id = state_attr('LOCKENTITYNAME','node_id') %}
            { "node": {{ node_id }} }
          retain: true
          
###################  automation:  ####################
automation:
  - alias: CASE_LOCK_NAME Lock Notifications
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: LOCKNAME
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
    action:
      - service: script.LOCKNAME_conditional_notify
        data_template:
          boolean: input_boolean.LOCKNAME_lock_notifications
          title: CASE_LOCK_NAME
          message: "{{ trigger.event.data.action_text }}"

  - alias: CASE_LOCK_NAME User Notifications
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: LOCKNAME
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
      - condition: template
        value_template: "{{ trigger.event.data.code_slot > 0 }}"
      - condition: template
        value_template: "{{ states['input_boolean']['notify_LOCKNAME_' + trigger.event.data.code_slot | string].state == 'on' }}"
    action:
      - service: script.LOCKNAME_manual_notify
        data_template:
          title: "{{ trigger.event.data.action_text }}"
          message: "{{ trigger.event.data.code_slot_name }}"

  - alias: CASE_LOCK_NAME Sensor Close
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
    trigger:
      entity_id: DOORSENSORENTITYNAME
      platform: state
      to: "off"
    action:
      - service: script.LOCKNAME_conditional_notify
        data_template:
          boolean: input_boolean.LOCKNAME_dooraccess_notifications
          title: CASE_LOCK_NAME
          message: "Closed"

  - alias: CASE_LOCK_NAME Sensor Opened
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
    trigger:
      entity_id: DOORSENSORENTITYNAME
      platform: state
      to: "on"
    action:
      - service: script.LOCKNAME_conditional_notify
        data_template:
          boolean: input_boolean.LOCKNAME_dooraccess_notifications
          title: CASE_LOCK_NAME
          message: "Opened"

  - alias: CASE_LOCK_NAME Changed Code
    trigger:
      entity_id: INPUTLOCKPINHEADER
      platform: state
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
      - condition: template
        value_template: >-
          {% set object_id = trigger.to_state.object_id %}
          {% set index = object_id.rfind('_') + 1 %}
          {% set code_slot = object_id[index:] %}
          {% set b = 'input_boolean.enabled_LOCKNAME_' + code_slot | string %}
          {{ is_state(b, 'on') and (trigger.from_state.state != trigger.to_state.state)}}
    action:
      - service: persistent_notification.create
        data_template:
          title: CASE_LOCK_NAME LOCK MANAGER
          message: >-
            {% set object_id = trigger.to_state.object_id %}
            {% set index = object_id.rfind('_') + 1 %}
            {% set code_slot = object_id[index:] %}
            {{ 'You changed the PIN for code  ' + code_slot | string + '. Please enable it in order to make it active.'}}
      - service: input_boolean.turn_off
        data_template:
          entity_id: >-
            {% set object_id = trigger.to_state.object_id %}
            {% set index = object_id.rfind('_') + 1 %}
            {% set code_slot = object_id[index:] %}
            {{ 'input_boolean.enabled_LOCKNAME_' + code_slot | string }}

  - alias: CASE_LOCK_NAME Reset
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
    trigger:
      entity_id: input_boolean.LOCKNAME_reset_lock
      platform: state
      from: "off"
      to: "on"
    action:
      - service: script.LOCKNAME_reset_lock
      - service: input_boolean.turn_off
        entity_id: input_boolean.LOCKNAME_reset_lock

  - alias: CASE_LOCK_NAME Decrement Access Count
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: LOCKNAME
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
      - condition: template
        # make sure decrementing access entries is enabled 
        value_template: "{{ states('input_boolean.accesslimit_LOCKNAME_' + trigger.event.data.code_slot | string)=='on' }}"
      - condition: template
        # Check for Keypad Unlock code
        value_template: "{{ trigger.event.data.code_slot > 0 and trigger.event.data.action_code in (6, 19)}}"
    action:
      - service: input_number.decrement
        data_template:
          entity_id: "{{ 'input_number.accesscount_LOCKNAME_' + trigger.event.data.code_slot | string }}"
